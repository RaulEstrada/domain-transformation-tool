/**
 * generated by Xtext 2.9.0
 */
package org.xtext.example.tfg.myDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.tfg.myDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyDslFactoryImpl extends EFactoryImpl implements MyDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MyDslFactory init()
  {
    try
    {
      MyDslFactory theMyDslFactory = (MyDslFactory)EPackage.Registry.INSTANCE.getEFactory(MyDslPackage.eNS_URI);
      if (theMyDslFactory != null)
      {
        return theMyDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MyDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MyDslPackage.MODEL: return createMODEL();
      case MyDslPackage.ELEMENT: return createELEMENT();
      case MyDslPackage.ENTITY: return createENTITY();
      case MyDslPackage.ENTITYELEMENT: return createENTITYELEMENT();
      case MyDslPackage.VALUEOBJECT: return createVALUEOBJECT();
      case MyDslPackage.ENUMERATION: return createENUMERATION();
      case MyDslPackage.LINK: return createLINK();
      case MyDslPackage.ANNOTATED_ATTRIBUTE: return createANNOTATED_ATTRIBUTE();
      case MyDslPackage.ATTRIBUTE: return createATTRIBUTE();
      case MyDslPackage.RELATIONSHIP: return createRELATIONSHIP();
      case MyDslPackage.OPERATION: return createOPERATION();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MODEL createMODEL()
  {
    MODELImpl model = new MODELImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ELEMENT createELEMENT()
  {
    ELEMENTImpl element = new ELEMENTImpl();
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ENTITY createENTITY()
  {
    ENTITYImpl entity = new ENTITYImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ENTITYELEMENT createENTITYELEMENT()
  {
    ENTITYELEMENTImpl entityelement = new ENTITYELEMENTImpl();
    return entityelement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VALUEOBJECT createVALUEOBJECT()
  {
    VALUEOBJECTImpl valueobject = new VALUEOBJECTImpl();
    return valueobject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ENUMERATION createENUMERATION()
  {
    ENUMERATIONImpl enumeration = new ENUMERATIONImpl();
    return enumeration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LINK createLINK()
  {
    LINKImpl link = new LINKImpl();
    return link;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ANNOTATED_ATTRIBUTE createANNOTATED_ATTRIBUTE()
  {
    ANNOTATED_ATTRIBUTEImpl annotateD_ATTRIBUTE = new ANNOTATED_ATTRIBUTEImpl();
    return annotateD_ATTRIBUTE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ATTRIBUTE createATTRIBUTE()
  {
    ATTRIBUTEImpl attribute = new ATTRIBUTEImpl();
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RELATIONSHIP createRELATIONSHIP()
  {
    RELATIONSHIPImpl relationship = new RELATIONSHIPImpl();
    return relationship;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OPERATION createOPERATION()
  {
    OPERATIONImpl operation = new OPERATIONImpl();
    return operation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslPackage getMyDslPackage()
  {
    return (MyDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MyDslPackage getPackage()
  {
    return MyDslPackage.eINSTANCE;
  }

} //MyDslFactoryImpl
